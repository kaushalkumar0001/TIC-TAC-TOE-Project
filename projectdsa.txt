#include <iostream>
using namespace std;

char board[3][3] = {{'1', '2', '3'}, {'4', '5', '6'}, {'7', '8', '9'}};
char current_marker;
int current_player;

// Function to display the current board state
void drawBoard() {
    cout << "Tic-Tac-Toe Board:\n\n";
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            cout << board[i][j];
            if (j < 2) cout << " | ";
        }
        if (i < 2) cout << "\n---------\n";
    }
    cout << endl;
}

// Function to place the marker on the board
bool placeMarker(int slot) {
    int row = (slot - 1) / 3;
    int col = (slot - 1) % 3;

    if (board[row][col] != 'X' && board[row][col] != 'O') {
        board[row][col] = current_marker;
        return true;
    } else {
        return false;
    }
}

// Function to check for a win
int checkWinner() {
    // Check rows and columns
    for (int i = 0; i < 3; i++) {
        if (board[i][0] == board[i][1] && board[i][1] == board[i][2]) return current_player;
        if (board[0][i] == board[1][i] && board[1][i] == board[2][i]) return current_player;
    }

    // Check diagonals
    if (board[0][0] == board[1][1] && board[1][1] == board[2][2]) return current_player;
    if (board[0][2] == board[1][1] && board[1][1] == board[2][0]) return current_player;

    return 0; // No winner yet
}

// Function to switch players
void switchPlayer() {
    if (current_player == 1) {
        current_player = 2;
        current_marker = (current_marker == 'X') ? 'O' : 'X';
    } else {
        current_player = 1;
        current_marker = (current_marker == 'X') ? 'O' : 'X';
    }
}

// Function to play the game
void playGame() {
    int winner = 0;
    int turns = 0;

    cout << "Player 1, choose your marker (X/O): ";
    char marker_p1;
    cin >> marker_p1;

    if (marker_p1 != 'X' && marker_p1 != 'O') {
        cout << "Invalid marker! Defaulting to X.\n";
        marker_p1 = 'X';
    }

    current_player = 1;
    current_marker = marker_p1;

    drawBoard();

    while (winner == 0 && turns < 9) {
        cout << "Player " << current_player << "'s turn. Enter your slot (1-9): ";
        int slot;
        cin >> slot;

        if (slot < 1 || slot > 9) {
            cout << "Invalid slot! Try again.\n";
            continue;
        }

        if (!placeMarker(slot)) {
            cout << "Slot occupied! Try again.\n";
            continue;
        }

        drawBoard();
        winner = checkWinner();
        if (winner == 0) switchPlayer();
        turns++;
    }

    if (winner != 0)
        cout << "Player " << winner << " wins!\n";
    else
        cout << "It's a draw!\n";
}

int main() {
    playGame();
    return 0;
}